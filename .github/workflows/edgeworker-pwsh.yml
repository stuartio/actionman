name: publish-edgeworker-pwsh
on: 
  push:
    branches:
      - main
    paths:
      - 'edgeworkers/**'
  workflow_dispatch:

env:
  AKAMAI_HOST: ${{ secrets.akamai_host }}
  AKAMAI_CLIENT_TOKEN: ${{ secrets.akamai_client_token }}
  AKAMAI_ACCESS_TOKEN: ${{ secrets.akamai_access_token }}
  AKAMAI_CLIENT_SECRET: ${{ secrets.akamai_client_secret }}
  # AKAMAI_ACCOUNT_KEY: ${{ vars.ACCOUNT_KEY }}

jobs:
  Update-EdgeWorker:
    runs-on: ubuntu-latest
    container: stuartmacleod/akamaipowershell:latest
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/checkout@v4
      - run: |
            New-EdgeWorkerVersion -EdgeWorkerName ${{ vars.EW_NAME }} -CodeDirectory edgeworkers
  
  Push-To-Staging:
    needs: Update-EdgeWorker
    runs-on: ubuntu-latest
    container: stuartmacleod/akamaipowershell:latest
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/checkout@v4
      - run: |
            $Version = (Get-Content edgeworkers/bundle.json -Raw | ConvertFrom-Json).'edgeworker-version'
            $Activation = Deploy-EdgeWorker -EdgeWorkerName ${{ vars.EW_NAME }} -Version $Version -Network STAGING
            $Status = Get-EdgeWorkerActivation -EdgeWorkerID $Activation.edgeWorkerId -ActivationID $Activation.activationId
            while($Status -ne 'COMPLETE'){
                Start-Sleep -s 30
                Write-Host "Activation incomplete. Sleeping for 30 seconds"
                $Status = Get-EdgeWorkerActivation -EdgeWorkerID $Activation.edgeWorkerId -ActivationID $Activation.activationId
            }